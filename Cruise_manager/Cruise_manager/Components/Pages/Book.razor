@page "/Book"
@inject NavigationManager NavigationManager
@inject NavigationManager Navigation
@using Cruise_manager.Components.Data
@using Microsoft.AspNetCore.Components

<style>
    html, body {
        height: 100%;
        margin: 0;
        font-family: Arial, sans-serif;
    }

    .center-container {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        background-color: #f9f9f9;
        padding: 10px;
    }

    .form-container {
        display: grid;
        grid-template-columns: 1fr;
        grid-gap: 15px;
        padding: 20px;
        width: 100%;
        max-width: 450px;
        border: 1px solid lightblue;
        border-radius: 12px;
        background-color: white;
        box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
        position: relative;
        max-height: 90%;
        overflow-y: auto;
    }

    .login_logo {
        position: absolute;
        top: 7%;
        left: 50%;
        transform: translateX(-50%);
        z-index: 2;
    }

    label {
        font-weight: bold;
        margin-bottom: 5px;
        display: block;
        font-size: 14px;
    }

    input {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 8px;
        box-sizing: border-box;
    }

    .sign {
        text-align: center;
        margin-top: 15px;
    }

    /* Flexbox style for aligning radio buttons and labels horizontally */
    .ticket-type-container {
        display: flex;
        align-items: center; /* Ensures radio buttons and labels are aligned properly */
        gap: 20px; /* Adds space between radio buttons */
    }

        .ticket-type-container div {
            display: flex;
            align-items: center; /* Ensures label is aligned to the left of the radio button */
        }

        .ticket-type-container label {
            margin-left: 8px; /* Space between radio button and label text */
        }
</style>

<div class="center-container">
    <img src="Resources/logo.png" class="login_logo" height="100px" width="100px">
    <div class="form-container">
        <label>First name</label>
        <input type="text" />
        <label>Middle name</label>
        <input type="text" />
        <label>Last name</label>
        <input type="text" />
        <label>ЕГН</label>
        <input type="text" />
        <label>Nationality</label>
        <input type="text" />
        <label>Address</label>
        <input type="text" />
        <label>Phone number</label>
        <input type="text" />
        <label>Email</label>
        <input type="text" />

        @if (IsBothAvaliable())
        {
            <label>Ticket Type</label>
            <div class="ticket-type-container">
                <div>
                    <input type="radio" name="ticketType" id="business" value="Business" />
                    <label for="business">Business</label>
                </div>
                <div>
                    <input type="radio" name="ticketType" id="passenger" value="Passenger" />
                    <label for="passenger">Passenger</label>
                </div>
            </div>
        }
        <button class="button">Book Now</button>
    </div>
</div>

@code {
    [Parameter]
    public string CruiseId { get; set; }

    protected override void OnInitialized()
    {
        if (Navigation.Uri.Contains("cruiseId"))
        {
            CruiseId = Navigation.ToAbsoluteUri(Navigation.Uri).Query.Split("cruiseId=")[1];
            Console.WriteLine($"Cruise ID: {CruiseId}");
        }
    }

    public Cruises FindCruise()
    {
        List<Cruises> cruises = Database.GetCruises();
        Cruises foundCruise = cruises.Find(x => x.Cruise_id == Convert.ToInt32(CruiseId));
        return foundCruise;
    }
    public bool IsBothAvaliable()
    {
        Cruises cruise = FindCruise();
        if (cruise.PassangerCap == 0 || cruise.BuisinessClassCap == 0)
        {
            return false;
        }
        return true;
    }
}
